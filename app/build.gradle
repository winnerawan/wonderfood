apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'AndResGuard'

buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        // The Fabric Gradle plugin uses an open ended version to react
        // quickly to Android tooling updates
        classpath ("com.tencent.mm:AndResGuard-gradle-plugin:1.2.7") { changing=true }
    }
}
andResGuard {
    mappingFile = file("./resource_mapping.txt")
    use7zip = true
    useSign = true
    keepRoot = false
    // add <yourpackagename>.R.drawable.icon into whitelist.
    // because the launcher will get the icon with his name
    whiteList = [
            "R.mipmap.ic_launcher",
            "R.mipmap.ic_launcher_round",
            //https://docs.fabric.io/android/crashlytics/build-tools.html
            "R.string.com.crashlytics.*",
            "R.id.*"
    ]
    compressFilePattern = [
            "*.png",
            "*.jpg",
            "*.jpeg",
            "*.gif",
            "resources.arsc"
    ]
    sevenzip {
        artifact = "com.tencent.mm:SevenZip:1.2.7"
        //path = "/usr/local/bin/7za"
    }

    /**
     * Optional: if finalApkBackupPath is null, AndResGuard will overwrite final apk
     * to the path which assemble[Task] write to
     */
    finalApkBackupPath = "${project.rootDir}/final.apk"
    digestalg = "SHA256"
}
android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion
    defaultConfig {
        applicationId "net.winnerawan.wonderfood"
        minSdkVersion 17
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary true
    }

    signingConfigs {
        release {
            try {
                storeFile file("../wonderfood.jks")
                storePassword "wonderfood"
                keyAlias "wonderfood"
                keyPassword "iseng2pertamax"
                v2SigningEnabled true
            } catch (ex) {
                throw new InvalidUserDataException(ex.toString())
            }
        }

        debug {
            storeFile file("/Users/winnerawan/.android/debug.keystore")
        }
    }
    buildTypes {
        debug {
            buildConfigField("String", "BASE_URL", "\"http://api.wonderfood.winnerawan.net/v1\"")
//            buildConfigField("String", "BASE_URL", "\"http://192.168.1.195/wonderfood/v1\"")
            buildConfigField("String", "API_KEY", "\"ABCXYZ123TEST\"")
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("String", "BASE_URL", "\"http://api.wonderfood.winnerawan.net/v1\"")
            buildConfigField("String", "API_KEY", "\"ABCXYZ123TEST\"")
            shrinkResources true
            zipAlignEnabled true
            pseudoLocalesEnabled true
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    // android support libraries
    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:support-vector-drawable:$rootProject.supportLibraryVersion"
    compile "com.android.support:animated-vector-drawable:$rootProject.supportLibraryVersion"
    compile 'cat.ereza:customactivityoncrash:1.5.0'
    compile 'net.yslibrary.keyboardvisibilityevent:keyboardvisibilityevent:2.1.0'
    compile 'com.google.android.gms:play-services-places:11.0.4'
    compile 'com.google.android.gms:play-services-location:11.0.4'

    // font
    compile "uk.co.chrisjenx:calligraphy:$rootProject.calligraphyVersion"
    compile 'com.google.android:flexbox:0.3.0'
    // network
    compile "com.amitshekhar.android:rx2-android-networking:$rootProject.rx2FastAndroidNetworking"

    // image
    compile "com.github.bumptech.glide:glide:$rootProject.glideVersion"

    // parser
    compile "com.google.code.gson:gson:$rootProject.gsonVersion"

    // database
    compile "org.greenrobot:greendao:$rootProject.greenDaoVersion"

    // debug database
    debugCompile "com.amitshekhar.android:debug-db:$rootProject.debugDBVersion"

    // dependency injection
    compile "com.google.dagger:dagger:$rootProject.dagger2Version"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"

    // reactive
    compile "io.reactivex.rxjava2:rxjava:$rootProject.rxjava2Version"
    compile "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroidVersion"

    // code generator for view
    compile "com.jakewharton:butterknife:$rootProject.butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterKnifeVersion"
    // logger
    compile "com.jakewharton.timber:timber:$rootProject.timberVersion"

    // dependencies for local unit tests
    testCompile "junit:junit:$rootProject.ext.junitVersion"
    testCompile "org.mockito:mockito-core:$rootProject.mockitoVersion"
    testAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"

    // UI Testing
    androidTestCompile "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:$rootProject.espressoVersion"
    androidTestCompile "org.mockito:mockito-core:$rootProject.mockitoVersion"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"
    compile 'javax.inject:javax.inject:1'
    provided 'javax.annotation:jsr250-api:1.0'
    compile 'com.astuetz:pagerslidingtabstrip:1.0.1'
    compile 'com.wang.avi:library:2.1.3'
    compile 'com.ss.bannerslider:bannerslider:1.8.0'
    compile 'me.dm7.barcodescanner:zxing:1.9.8'
    compile 'com.journeyapps:zxing-android-embedded:3.5.0'
    compile 'com.github.sundeepk:compact-calendar-view:2.0.3-beta'
    compile 'com.facebook.rebound:rebound:0.3.8'
    compile 'jp.wasabeef:recyclerview-animators:2.2.7'
    compile 'de.hdodenhof:circleimageview:2.1.0'
    compile 'com.github.clans:fab:1.6.4'
    compile 'com.github.bluejamesbond:textjustify-android:2.1.6'
    compile 'com.code-troopers.betterpickers:library:3.1.0'
    compile 'com.yarolegovich:lovely-dialog:1.0.7'
    compile 'org.ocpsoft.prettytime:prettytime:4.0.1.Final'
}

task createVersionInformation  {
    def resDir = new File(buildDir, 'generated/buildinfo/')
    def destDir = new File(resDir, 'META-INF/')

    android {
        sourceSets {
            main.resources {
                srcDir resDir
            }
        }
    }

}

project.afterEvaluate {
    tasks.findAll { task ->
        task.name.startsWith('merge') && task.name.endsWith('Resources')
    }.each { t -> t.dependsOn createVersionInformation }
}

configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:$supportLibraryVersion"
}
